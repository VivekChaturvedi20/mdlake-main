{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "USE-IC-DA-DLDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADFConfigSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfconfig_sqlmi_selfhostedLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ManagedSQLInstanceDatasets"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [],
				"typeProperties": {
					"schema": "datalake",
					"table": "adfconf"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataWarehouseSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datawarehouse_sqlmi_selhostedLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ManagedSQLInstanceDatasets"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAMSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "uam_sqlmi_selfhostedLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ManagedSQLInstanceDatasets"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataWarehouseSink",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ADFConfigSource_OLD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "parameters{\n\tsourcetable as string,\n\twatermark_field as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[($sourcetable)]) ~> source1\nsource1 aggregate(max_Created_Modified_Date = max(toTimestamp(toString(byName($watermark_field)), 'yyyy-MM-dd HH:mm:ss'))) ~> Aggregate1\nAggregate1 derive(TableName = $sourcetable) ~> DerivedColumn1\nDerivedColumn1 alterRow(updateIf(isNull(max_Created_Modified_Date)==false())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Dest_table'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tWatermark_Value = max_Created_Modified_Date,\n\t\tDest_table = TableName\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADFConfigSource_OLD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADFConfigSource_OLD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLManagedInstaceLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ManagedSQLInstanceDatasets"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [],
				"typeProperties": {
					"schema": "datalake",
					"table": "adfconf"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DW-UAM-incrementalnew')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "configlookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"sqlReaderQuery": "select * from datalake.adfconf where enabled=1",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ADFConfigSource",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "dwfilter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "configlookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('configlookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Source,'sqldw')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "dwfilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('dwfilter').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check_Incremental_Flag",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().Load_Flag,'Incremental'))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy Full Data to ADLS Gen 2",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlMISource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{item().Source_table}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DataWarehouseSource",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "DataWarehouseSink",
														"type": "DatasetReference",
														"parameters": {
															"STGfilename": "@{item().Dest_table}"
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Get Last Modified date from config",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlMISource",
														"sqlReaderQuery": {
															"value": "select Watermark_Value from datalake.adfconf where Source_table like '@{item().Source_table}'",
															"type": "Expression"
														},
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ADFConfigSource",
														"type": "DatasetReference"
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "Copy Source to Datalake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Get Last Modified date from config",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlMISource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{item().Source_table}\nWHERE\nConvert(datetime,@{item().Watermark_Column},105) \n > \nConvert(datetime,substring(\nreplace(\n@{activity('Get Last Modified date from config').output.firstRow.Watermark_Value},'T',''),0,20),120)",
															"type": "Expression"
														},
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DataWarehouseSource",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "DataWarehouseSink",
														"type": "DatasetReference",
														"parameters": {
															"STGfilename": "@{item().Dest_table}"
														}
													}
												]
											},
											{
												"name": "getwatermarkcolname",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlMISource",
														"sqlReaderQuery": "select Watermark_Column As watercol from datalake.adfconf where Source_table like '@{item().Source_table}'",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ADFConfigSource",
														"type": "DatasetReference"
													}
												}
											},
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "getwatermarkcolname",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "dw_watermarktab",
													"value": {
														"value": "@activity('getwatermarkcolname').output",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "uamfilter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "configlookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('configlookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Source,'sqluam')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "uamfilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('uamfilter').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().Load_Flag,'Incremental'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"dw_watermarktab": {
						"type": "String"
					},
					"uam_watermarktab": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T13:27:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADFConfigSource')]",
				"[concat(variables('factoryId'), '/datasets/DataWarehouseSource')]"
			]
		}
	]
}